knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# CHANGE THE PATH UP TO results_date_time
path = "/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/out_run5/"
reactions.1B = readxl::read_xlsx("/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/Pools.xlsx",sheet = "Pool1B-Resitance+")  # To distinguish amplicons in pool 5 from 1B
# Load sample coverage
samples = read.delim(paste0(path,"/sample_coverage.txt"))
# Load coverage per amplicon
amplicons = read.delim(paste0(path,"/amplicon_coverage.txt")) %>%
filter(!Locus %in% (reactions.1B %>% filter(!`Present in pool 5`))$`locus-pool` | str_detect(Locus,"1AB|1B2")) %>%
mutate(amplicon_length = as.numeric(sapply(strsplit(Locus,"-"),"[",3)) - as.numeric(sapply(strsplit(Locus,"-"),"[",2)))
# Load allele table
alleles = read.delim(paste0(path,"/allele_data.txt"))
# Load resistance markers genotyping
resmarkers = read.delim(paste0(path,"/resistance_marker_module/resmarker_table.txt"))
# Load manifest
manifest = read.csv(paste0(path,"/manifestRun5.csv")) %>%
mutate(Row =factor(Row,levels = rev(letters[1:8])))
# Get the dominant fd allele in each sample
fdgenotype = alleles %>%
filter(Locus == "Pf3D7_13_v3-748254-748510-1B",Reads>10) %>%
group_by(SampleID,Locus) %>%
slice_max(Reads) %>%
mutate(fd = ifelse(str_detect(PseudoCIGAR,"108A"),"DD2","Not DD2")) %>% # if pseudoCIGAR has a 108A mutation it looks like dd2
ungroup() %>%
select(SampleID,fd) %>%
distinct()
# Add Columns to amplicons to specify Batch, Lab ID and SampleType
# THE VARIABLES ADDED HERE ARE TAKEN FROM THE SAMPLE NAME. YOU WILL NEED TO MODIFY TO USE A MANIFEST INSTEAD
# Batch, LabID, MicronicID, SampleType, sampleN,sampleN/corrected, Column, Row
amplicons.full = amplicons %>%
mutate(SampleName = sapply(str_split(SampleID,"_S"),head,1)) %>%
left_join(manifest,by = c("SampleName"="SampleID"))
samples.info =  amplicons.full %>%
select(SampleID,Batch,SampleType,Column,Row) %>%
distinct()
# Get a summary of each sample: how many total reads per reaction, how many amplicons with more
# than 100 reas per reaction, and then the same but total, not per reaction
# reaction here refers to 1 of the 2 mPCR reactions reaction1 : 1A+5, reaction2 : 2.
summary_samples = amplicons.full %>%
mutate(reaction = substr(sapply(str_split(Locus,"-"),tail,1),1,1)) %>%
group_by(SampleID,Batch,SampleType,reaction) %>%
summarize(Reads.reaction = sum(OutputPostprocessing),
n100.reaction = sum(OutputPostprocessing>100),
n10.reaction = sum(OutputPostprocessing>10)) %>%
group_by(SampleID,Batch,SampleType) %>%
mutate(Reads = sum(Reads.reaction),
n100 = sum(n100.reaction),
n10 = sum(n10.reaction)) %>%
ungroup() %>%
left_join(fdgenotype ,by="SampleID") %>%
mutate(n100.norm = ifelse(reaction==1,n100.reaction/207,n100.reaction/24)) %>%
left_join(samples.info)
summary_samples2 = summary_samples %>%
select(SampleID,Batch,reaction,Reads.reaction,n100.reaction,Column,Row) %>%
distinct() %>%
pivot_wider(names_from = reaction,values_from = c(Reads.reaction,n100.reaction)) %>%
mutate(Reads.reaction.ratio = (Reads.reaction_1+0.1)/(Reads.reaction_2+0.1),n100.ratio = (n100.reaction_1+0.1)/(n100.reaction_2+0.1)) %>%
pivot_longer(cols =c(Reads.reaction.ratio,n100.ratio), names_to = "ratio",values_to = "value") %>%
mutate(value = ifelse(Reads.reaction_1<100 & Reads.reaction_2<100 & n100.reaction_1<2 & n100.reaction_2<2,
NA,value))
q <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12, by=2)) %>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])
r<-summary_samples %>%
select(Batch,Column,Row,SampleType,fd) %>% distinct()
# make a quadrants data frame to add to plate layout visualizations
quadrants <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12, by=2))%>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])%>%
left_join(summary_samples %>%  select(Batch,Column,Row,SampleType,fd) %>% distinct(),by = c("Batch","x"="Column","Row"="Row"))
summary_amplicons = amplicons.full %>%
mutate(pool = sapply(str_split(Locus,"-"),tail,1)) %>%
mutate(pool = case_when(pool=="1B" ~ "5",
pool=="1B2" ~ "5 and 2",
pool=="1AB" ~ "1A and 5",
TRUE ~ pool)) %>%
group_by(Locus,Batch,pool,amplicon_length) %>%
summarize(n100.locus = sum(OutputPostprocessing>100),
n10.locus = sum(OutputPostprocessing>1))
## PLOT A HEATMAP WITH LAYOUT AND SAMPLE TYPES
ggplot(summary_samples) +
geom_tile(aes(x = Column,y=Row,fill=SampleType))+
facet_wrap(vars(Batch))+
geom_rect(data = quadrants,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
color = "black", fill = NA)+
scale_x_continuous(breaks = 1:12)+
scale_fill_manual(values = c("negative" = "darkred", "positive" = "darkblue","sample" = "darkgrey","NA" = "white"))
View(q)
View(quadrants)
View(q)
View(q)
# CHANGE THE PATH UP TO results_date_time
path = "/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/out_run5/"
reactions.1B = readxl::read_xlsx("/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/Pools.xlsx",sheet = "Pool1B-Resitance+")  # To distinguish amplicons in pool 5 from 1B
# Load sample coverage
samples = read.delim(paste0(path,"/sample_coverage.txt"))
# Load coverage per amplicon
amplicons = read.delim(paste0(path,"/amplicon_coverage.txt")) %>%
filter(!Locus %in% (reactions.1B %>% filter(!`Present in pool 5`))$`locus-pool` | str_detect(Locus,"1AB|1B2")) %>%
mutate(amplicon_length = as.numeric(sapply(strsplit(Locus,"-"),"[",3)) - as.numeric(sapply(strsplit(Locus,"-"),"[",2)))
# Load allele table
alleles = read.delim(paste0(path,"/allele_data.txt"))
# Load resistance markers genotyping
resmarkers = read.delim(paste0(path,"/resistance_marker_module/resmarker_table.txt"))
# Load manifest
manifest = read.csv(paste0(path,"/manifestRun5.csv")) %>%
mutate(Row =factor(Row,levels = rev(letters[1:8])))
# Get the dominant fd allele in each sample
fdgenotype = alleles %>%
filter(Locus == "Pf3D7_13_v3-748254-748510-1B",Reads>10) %>%
group_by(SampleID,Locus) %>%
slice_max(Reads) %>%
mutate(fd = ifelse(str_detect(PseudoCIGAR,"108A"),"DD2","Not DD2")) %>% # if pseudoCIGAR has a 108A mutation it looks like dd2
ungroup() %>%
select(SampleID,fd) %>%
distinct()
# Add Columns to amplicons to specify Batch, Lab ID and SampleType
# THE VARIABLES ADDED HERE ARE TAKEN FROM THE SAMPLE NAME. YOU WILL NEED TO MODIFY TO USE A MANIFEST INSTEAD
# Batch, LabID, MicronicID, SampleType, sampleN,sampleN/corrected, Column, Row
amplicons.full = amplicons %>%
mutate(SampleName = sapply(str_split(SampleID,"_S"),head,1)) %>%
left_join(manifest,by = c("SampleName"="SampleID"))
samples.info =  amplicons.full %>%
select(SampleID,Batch,SampleType,Column,Row) %>%
distinct()
# Get a summary of each sample: how many total reads per reaction, how many amplicons with more
# than 100 reas per reaction, and then the same but total, not per reaction
# reaction here refers to 1 of the 2 mPCR reactions reaction1 : 1A+5, reaction2 : 2.
summary_samples = amplicons.full %>%
mutate(reaction = substr(sapply(str_split(Locus,"-"),tail,1),1,1)) %>%
group_by(SampleID,Batch,SampleType,reaction) %>%
summarize(Reads.reaction = sum(OutputPostprocessing),
n100.reaction = sum(OutputPostprocessing>100),
n10.reaction = sum(OutputPostprocessing>10)) %>%
group_by(SampleID,Batch,SampleType) %>%
mutate(Reads = sum(Reads.reaction),
n100 = sum(n100.reaction),
n10 = sum(n10.reaction)) %>%
ungroup() %>%
left_join(fdgenotype ,by="SampleID") %>%
mutate(n100.norm = ifelse(reaction==1,n100.reaction/207,n100.reaction/24)) %>%
left_join(samples.info)
summary_samples2 = summary_samples %>%
select(SampleID,Batch,reaction,Reads.reaction,n100.reaction,Column,Row) %>%
distinct() %>%
pivot_wider(names_from = reaction,values_from = c(Reads.reaction,n100.reaction)) %>%
mutate(Reads.reaction.ratio = (Reads.reaction_1+0.1)/(Reads.reaction_2+0.1),n100.ratio = (n100.reaction_1+0.1)/(n100.reaction_2+0.1)) %>%
pivot_longer(cols =c(Reads.reaction.ratio,n100.ratio), names_to = "ratio",values_to = "value") %>%
mutate(value = ifelse(Reads.reaction_1<100 & Reads.reaction_2<100 & n100.reaction_1<2 & n100.reaction_2<2,
NA,value))
q <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12)) %>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])
r<-summary_samples %>%
select(Batch,Column,Row,SampleType,fd) %>% distinct()
# make a quadrants data frame to add to plate layout visualizations
quadrants <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12, by=2))%>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])%>%
left_join(summary_samples %>%  select(Batch,Column,Row,SampleType,fd) %>% distinct(),by = c("Batch","x"="Column","Row"="Row"))
summary_amplicons = amplicons.full %>%
mutate(pool = sapply(str_split(Locus,"-"),tail,1)) %>%
mutate(pool = case_when(pool=="1B" ~ "5",
pool=="1B2" ~ "5 and 2",
pool=="1AB" ~ "1A and 5",
TRUE ~ pool)) %>%
group_by(Locus,Batch,pool,amplicon_length) %>%
summarize(n100.locus = sum(OutputPostprocessing>100),
n10.locus = sum(OutputPostprocessing>1))
## PLOT A HEATMAP WITH LAYOUT AND SAMPLE TYPES
ggplot(summary_samples) +
geom_tile(aes(x = Column,y=Row,fill=SampleType))+
facet_wrap(vars(Batch))+
geom_rect(data = quadrants,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
color = "black", fill = NA)+
scale_x_continuous(breaks = 1:12)+
scale_fill_manual(values = c("negative" = "darkred", "positive" = "darkblue","sample" = "darkgrey","NA" = "white"))
View(q)
# CHANGE THE PATH UP TO results_date_time
path = "/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/out_run5/"
reactions.1B = readxl::read_xlsx("/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/Pools.xlsx",sheet = "Pool1B-Resitance+")  # To distinguish amplicons in pool 5 from 1B
# Load sample coverage
samples = read.delim(paste0(path,"/sample_coverage.txt"))
# Load coverage per amplicon
amplicons = read.delim(paste0(path,"/amplicon_coverage.txt")) %>%
filter(!Locus %in% (reactions.1B %>% filter(!`Present in pool 5`))$`locus-pool` | str_detect(Locus,"1AB|1B2")) %>%
mutate(amplicon_length = as.numeric(sapply(strsplit(Locus,"-"),"[",3)) - as.numeric(sapply(strsplit(Locus,"-"),"[",2)))
# Load allele table
alleles = read.delim(paste0(path,"/allele_data.txt"))
# Load resistance markers genotyping
resmarkers = read.delim(paste0(path,"/resistance_marker_module/resmarker_table.txt"))
# Load manifest
manifest = read.csv(paste0(path,"/manifestRun5.csv")) %>%
mutate(Row =factor(Row,levels = rev(letters[1:8])))
# Get the dominant fd allele in each sample
fdgenotype = alleles %>%
filter(Locus == "Pf3D7_13_v3-748254-748510-1B",Reads>10) %>%
group_by(SampleID,Locus) %>%
slice_max(Reads) %>%
mutate(fd = ifelse(str_detect(PseudoCIGAR,"108A"),"DD2","Not DD2")) %>% # if pseudoCIGAR has a 108A mutation it looks like dd2
ungroup() %>%
select(SampleID,fd) %>%
distinct()
# Add Columns to amplicons to specify Batch, Lab ID and SampleType
# THE VARIABLES ADDED HERE ARE TAKEN FROM THE SAMPLE NAME. YOU WILL NEED TO MODIFY TO USE A MANIFEST INSTEAD
# Batch, LabID, MicronicID, SampleType, sampleN,sampleN/corrected, Column, Row
amplicons.full = amplicons %>%
mutate(SampleName = sapply(str_split(SampleID,"_S"),head,1)) %>%
left_join(manifest,by = c("SampleName"="SampleID"))
samples.info =  amplicons.full %>%
select(SampleID,Batch,SampleType,Column,Row) %>%
distinct()
# Get a summary of each sample: how many total reads per reaction, how many amplicons with more
# than 100 reas per reaction, and then the same but total, not per reaction
# reaction here refers to 1 of the 2 mPCR reactions reaction1 : 1A+5, reaction2 : 2.
summary_samples = amplicons.full %>%
mutate(reaction = substr(sapply(str_split(Locus,"-"),tail,1),1,1)) %>%
group_by(SampleID,Batch,SampleType,reaction) %>%
summarize(Reads.reaction = sum(OutputPostprocessing),
n100.reaction = sum(OutputPostprocessing>100),
n10.reaction = sum(OutputPostprocessing>10)) %>%
group_by(SampleID,Batch,SampleType) %>%
mutate(Reads = sum(Reads.reaction),
n100 = sum(n100.reaction),
n10 = sum(n10.reaction)) %>%
ungroup() %>%
left_join(fdgenotype ,by="SampleID") %>%
mutate(n100.norm = ifelse(reaction==1,n100.reaction/207,n100.reaction/24)) %>%
left_join(samples.info)
summary_samples2 = summary_samples %>%
select(SampleID,Batch,reaction,Reads.reaction,n100.reaction,Column,Row) %>%
distinct() %>%
pivot_wider(names_from = reaction,values_from = c(Reads.reaction,n100.reaction)) %>%
mutate(Reads.reaction.ratio = (Reads.reaction_1+0.1)/(Reads.reaction_2+0.1),n100.ratio = (n100.reaction_1+0.1)/(n100.reaction_2+0.1)) %>%
pivot_longer(cols =c(Reads.reaction.ratio,n100.ratio), names_to = "ratio",values_to = "value") %>%
mutate(value = ifelse(Reads.reaction_1<100 & Reads.reaction_2<100 & n100.reaction_1<2 & n100.reaction_2<2,
NA,value))
q <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12)) %>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])
r<-summary_samples %>%
select(Batch,Column,Row,SampleType,fd) %>% distinct()
# make a quadrants data frame to add to plate layout visualizations
quadrants <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12))%>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])%>%
left_join(summary_samples %>%  select(Batch,Column,Row,SampleType,fd) %>% distinct(),by = c("Batch","x"="Column","Row"="Row"))
summary_amplicons = amplicons.full %>%
mutate(pool = sapply(str_split(Locus,"-"),tail,1)) %>%
mutate(pool = case_when(pool=="1B" ~ "5",
pool=="1B2" ~ "5 and 2",
pool=="1AB" ~ "1A and 5",
TRUE ~ pool)) %>%
group_by(Locus,Batch,pool,amplicon_length) %>%
summarize(n100.locus = sum(OutputPostprocessing>100),
n10.locus = sum(OutputPostprocessing>1))
## PLOT A HEATMAP WITH LAYOUT AND SAMPLE TYPES
ggplot(summary_samples) +
geom_tile(aes(x = Column,y=Row,fill=SampleType))+
facet_wrap(vars(Batch))+
geom_rect(data = quadrants,
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
color = "black", fill = NA)+
scale_x_continuous(breaks = 1:12)+
scale_fill_manual(values = c("negative" = "darkred", "positive" = "darkblue","sample" = "darkgrey","NA" = "white"))
View(q)
View(quadrants)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
# CHANGE THE PATH UP TO results_date_time
path = "/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/out_run5/"
reactions.1B = readxl::read_xlsx("/Users/bngom/da/gates23/Mad4Hatter_Analysis/cigass runs/Pools.xlsx",sheet = "Pool1B-Resitance+")  # To distinguish amplicons in pool 5 from 1B
# Load sample coverage
samples = read.delim(paste0(path,"/sample_coverage.txt"))
# Load coverage per amplicon
amplicons = read.delim(paste0(path,"/amplicon_coverage.txt")) %>%
filter(!Locus %in% (reactions.1B %>% filter(!`Present in pool 5`))$`locus-pool` | str_detect(Locus,"1AB|1B2")) %>%
mutate(amplicon_length = as.numeric(sapply(strsplit(Locus,"-"),"[",3)) - as.numeric(sapply(strsplit(Locus,"-"),"[",2)))
# Load allele table
alleles = read.delim(paste0(path,"/allele_data.txt"))
# Load resistance markers genotyping
resmarkers = read.delim(paste0(path,"/resistance_marker_module/resmarker_table.txt"))
# Load manifest
manifest = read.csv(paste0(path,"/manifestRun5.csv")) %>%
mutate(Row =factor(Row,levels = rev(letters[1:8])))
# Get the dominant fd allele in each sample
fdgenotype = alleles %>%
filter(Locus == "Pf3D7_13_v3-748254-748510-1B",Reads>10) %>%
group_by(SampleID,Locus) %>%
slice_max(Reads) %>%
mutate(fd = ifelse(str_detect(PseudoCIGAR,"108A"),"DD2","Not DD2")) %>% # if pseudoCIGAR has a 108A mutation it looks like dd2
ungroup() %>%
select(SampleID,fd) %>%
distinct()
# Add Columns to amplicons to specify Batch, Lab ID and SampleType
# THE VARIABLES ADDED HERE ARE TAKEN FROM THE SAMPLE NAME. YOU WILL NEED TO MODIFY TO USE A MANIFEST INSTEAD
# Batch, LabID, MicronicID, SampleType, sampleN,sampleN/corrected, Column, Row
amplicons.full = amplicons %>%
mutate(SampleName = sapply(str_split(SampleID,"_S"),head,1)) %>%
left_join(manifest,by = c("SampleName"="SampleID"))
samples.info =  amplicons.full %>%
select(SampleID,Batch,SampleType,Column,Row) %>%
distinct()
# Get a summary of each sample: how many total reads per reaction, how many amplicons with more
# than 100 reas per reaction, and then the same but total, not per reaction
# reaction here refers to 1 of the 2 mPCR reactions reaction1 : 1A+5, reaction2 : 2.
summary_samples = amplicons.full %>%
mutate(reaction = substr(sapply(str_split(Locus,"-"),tail,1),1,1)) %>%
group_by(SampleID,Batch,SampleType,reaction) %>%
summarize(Reads.reaction = sum(OutputPostprocessing),
n100.reaction = sum(OutputPostprocessing>100),
n10.reaction = sum(OutputPostprocessing>10)) %>%
group_by(SampleID,Batch,SampleType) %>%
mutate(Reads = sum(Reads.reaction),
n100 = sum(n100.reaction),
n10 = sum(n10.reaction)) %>%
ungroup() %>%
left_join(fdgenotype ,by="SampleID") %>%
mutate(n100.norm = ifelse(reaction==1,n100.reaction/207,n100.reaction/24)) %>%
left_join(samples.info)
summary_samples2 = summary_samples %>%
select(SampleID,Batch,reaction,Reads.reaction,n100.reaction,Column,Row) %>%
distinct() %>%
pivot_wider(names_from = reaction,values_from = c(Reads.reaction,n100.reaction)) %>%
mutate(Reads.reaction.ratio = (Reads.reaction_1+0.1)/(Reads.reaction_2+0.1),n100.ratio = (n100.reaction_1+0.1)/(n100.reaction_2+0.1)) %>%
pivot_longer(cols =c(Reads.reaction.ratio,n100.ratio), names_to = "ratio",values_to = "value") %>%
mutate(value = ifelse(Reads.reaction_1<100 & Reads.reaction_2<100 & n100.reaction_1<2 & n100.reaction_2<2,
NA,value))
q <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12)) %>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])
r<-summary_samples %>%
select(Batch,Column,Row,SampleType,fd) %>% distinct()
# make a quadrants data frame to add to plate layout visualizations
quadrants <- expand.grid(Batch = unique(summary_samples$Batch),y = 1:8, x = seq(1,12))%>%
mutate(ymin = y - 0.45,
ymax = y + 0.45,
xmin = x - 0.45,
xmax = x + 0.45) %>%
mutate(Row = rev(letters[1:8])[y])%>%
left_join(summary_samples %>%  select(Batch,Column,Row,SampleType,fd) %>% distinct(),by = c("Batch","x"="Column","Row"="Row"))
summary_amplicons = amplicons.full %>%
mutate(pool = sapply(str_split(Locus,"-"),tail,1)) %>%
mutate(pool = case_when(pool=="1B" ~ "5",
pool=="1B2" ~ "5 and 2",
pool=="1AB" ~ "1A and 5",
TRUE ~ pool)) %>%
group_by(Locus,Batch,pool,amplicon_length) %>%
summarize(n100.locus = sum(OutputPostprocessing>100),
n10.locus = sum(OutputPostprocessing>1))
View(q)
View(quadrants)
